---
import InputField from "@/components/forms/Input.astro";
import Select from "@/components/forms/Select.astro";
---

<dialog 
    popover 
    id="new-load-test" 
    class="fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 m-0 p-0 border-none rounded-lg shadow-2xl max-w-md w-[90%] bg-white max-h-[90vh] overflow-y-auto"
>
    <form 
        id="load-test-form"
        class="flex flex-col gap-4 p-6"
    >
        <div>
            <h2 class="text-2xl font-semibold">New Load Test</h2>
            <p class="text-gray-500 text-sm mt-1">Configure parameters for your load test</p>
        </div>
        
        <InputField 
            id="name"
            name="name"
            label="Test Name" 
            placeholder="my_api_test" 
            required
        />

        <InputField 
            id="url"
            name="url"
            label="Target URL" 
            placeholder="http://localhost:4321/api/health" 
            required
        />

        <div class="flex gap-4">
            <Select 
                id="http-method"
                name="method"
                label="HTTP Method" 
                options={["GET", "POST", "PUT", "DELETE", "PATCH"]}
            />

            <div class="flex-1">
                <InputField 
                    id="expected-status-code"
                    name="expectedStatusCode"
                    label="Expected Status" 
                    placeholder="200"
                    type="number"
                />
            </div>
        </div>

        <div class="flex gap-4">
            <div class="flex-1">
                <InputField 
                    id="threads"
                    name="threads"
                    label="Threads" 
                    placeholder="10"
                    type="number"
                    required
                />
            </div>

            <div class="flex-1">
                <InputField 
                    id="calls-per-thread"
                    name="callsPerThread"
                    label="Calls per Thread" 
                    placeholder="10"
                    type="number"
                    required
                />
            </div>
        </div>

        <InputField 
            id="timeout"
            name="timeout"
            label="Timeout (seconds)" 
            placeholder="30"
            type="number"
        />

        <div class="flex flex-col gap-2">
            <div class="flex items-center justify-between">
                <label class="font-medium text-sm">Headers</label>
                <button
                    type="button"
                    id="add-header-btn"
                    class="inline-flex items-center gap-1.5 px-3 py-1.5 text-sm font-medium border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                    >
                        <path d="M5 12h14"></path>
                        <path d="M12 5v14"></path>
                    </svg>
                    Add Header
                </button>
            </div>
            
            <div id="headers-container" class="space-y-2">
                <div class="flex gap-2 items-start header-row">
                    <input type="text" placeholder="Key" autocomplete="off" class="header-key flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
                    <input type="text" placeholder="Value" autocomplete="off" class="header-value flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
                    <button type="button" class="remove-header-btn p-2 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-lg transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M18 6 6 18"></path>
                            <path d="m6 6 12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <div class="flex flex-col gap-2">
            <label for="request-body" class="font-medium text-sm">Request Body <span class="text-gray-400 font-normal">(optional)</span></label>
            <textarea
                id="request-body"
                name="body"
                placeholder='{"username":"test","email":"test@example.com"}'
                autocomplete="off"
                class="border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg focus:outline-none resize-none font-mono text-sm h-[120px]"
            ></textarea>
        </div>

        <div class="flex gap-3 mt-2">
            <button type="submit" class="bg-black hover:bg-gray-800 text-white py-2 px-4 rounded-lg flex-1 transition-colors font-medium">
                Start Load Test
            </button>
            <button 
                type="button"
                popovertarget="new-load-test" 
                popovertargetaction="hide"
                class="border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-lg transition-colors font-medium"
            >
                Cancel
            </button>
        </div>
    </form>
</dialog>

<style>
    #new-load-test::backdrop {
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
    }
</style>

<script type="module">
    const form = document.getElementById('load-test-form');
    const dialog = document.getElementById('new-load-test');
    
    document.getElementById('add-header-btn')?.addEventListener('click', () => {
        const row = document.createElement('div');
        row.className = 'flex gap-2 items-start header-row';
        row.innerHTML = `
            <input type="text" placeholder="Key" autocomplete="off" class="header-key flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
            <input type="text" placeholder="Value" autocomplete="off" class="header-value flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
            <button type="button" class="remove-header-btn p-2 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-lg transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M18 6 6 18"></path>
                    <path d="m6 6 12 12"></path>
                </svg>
            </button>
        `;
        row.querySelector('.remove-header-btn').addEventListener('click', () => row.remove());
        document.getElementById('headers-container').appendChild(row);
    });

    document.getElementById('headers-container')?.addEventListener('click', (e) => {
        const btn = e.target.closest('.remove-header-btn');
        if (btn) btn.closest('.header-row').remove();
    });

    form?.addEventListener('submit', async (e) => {
        e.preventDefault();

        const headers = {};
        document.querySelectorAll('.header-row').forEach(row => {
            const key = row.querySelector('.header-key').value.trim();
            const value = row.querySelector('.header-value').value.trim();
            if (key && value) headers[key] = value;
        });

        const data = {
            name: document.getElementById('name').value.trim(),
            url: document.getElementById('url').value.trim(),
            method: document.getElementById('http-method').value,
            headers: Object.keys(headers).length > 0 ? headers : undefined,
            body: document.getElementById('request-body').value.trim() || undefined,
            callsPerThread: parseInt(document.getElementById('calls-per-thread').value),
            threads: parseInt(document.getElementById('threads').value),
            timeout: parseInt(document.getElementById('timeout').value) || undefined,
            expectedStatusCode: parseInt(document.getElementById('expected-status-code').value) || undefined
        };

        try {
            const response = await fetch('/api/load-test', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
                alert(`Load test "${data.name}" started successfully!\nTotal requests: ${result.config.totalCalls}`);
                form.reset();
                // Reset headers to just one row
                const container = document.getElementById('headers-container');
                container.innerHTML = `
                    <div class="flex gap-2 items-start header-row">
                        <input type="text" placeholder="Key" autocomplete="off" class="header-key flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
                        <input type="text" placeholder="Value" autocomplete="off" class="header-value flex-1 border border-gray-300 placeholder:text-gray-400 p-2 rounded-lg text-sm focus:outline-none" />
                        <button type="button" class="remove-header-btn p-2 text-gray-400 hover:text-red-500 hover:bg-red-50 rounded-lg transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M18 6 6 18"></path>
                                <path d="m6 6 12 12"></path>
                            </svg>
                        </button>
                    </div>
                `;
                dialog.hidePopover();
            } else {
                alert(`Error: ${result.error || 'Failed to start load test'}`);
            }
        } catch (error) {
            alert(`Error: ${error.message}`);
        }
    });
</script>