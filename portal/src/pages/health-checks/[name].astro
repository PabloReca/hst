---
// src/pages/health-checks/[name].astro
import Layout from "@/layouts/Layout.astro";

const { name } = Astro.params;

// Fetch health check details (solo datos que no cambian)
let healthCheck = null;

try {
    const response = await fetch('http://localhost:4321/api/health-checks');
    const data = await response.json();
    if (data.success) {
        healthCheck = data.data.find((hc: any) => hc.name === name);
    }
} catch (error) {
    console.error('Failed to fetch health check:', error);
}

if (!healthCheck) {
    return Astro.redirect('/health-checks');
}
---

<Layout>
    <main class="px-16 gap-8 flex flex-col">
        <div class="flex items-center gap-4">
            <a href="/health-checks" class="text-gray-600 hover:text-black">
                ‚Üê Back
            </a>
        </div>

        <header>
            <h1 class="text-3xl font-semibold">{healthCheck.name}</h1>
            <p class="text-gray-600 mt-2">{healthCheck.url}</p>
            <div class="flex gap-4 mt-4">
                <span class="text-sm bg-gray-100 px-3 py-1 rounded">
                    {healthCheck.method}
                </span>
                <span class="text-sm bg-gray-100 px-3 py-1 rounded">
                    Every {healthCheck.interval}s
                </span>
                <span class="text-sm bg-gray-100 px-3 py-1 rounded">
                    Expected: {healthCheck.statusCode}
                </span>
            </div>
        </header>

        <div class="border rounded-lg overflow-hidden">
            <div class="bg-gray-50 px-6 py-4 border-b">
                <h2 class="font-semibold">Recent Logs</h2>
            </div>
            <div class="p-6">
                <div id="logs-container" class="space-y-2">
                    <p class="text-gray-600 text-center py-8">
                        Loading logs...
                    </p>
                </div>
            </div>
        </div>
    </main>
</Layout>

<script define:vars={{ healthCheckName: name }}>
    async function fetchLogs() {
        try {
            const response = await fetch(`/api/health-checks/${healthCheckName}/logs`);
            const data = await response.json();
            
            if (data.success) {
                renderLogs(data.data);
            }
        } catch (error) {
            console.error('Failed to fetch logs:', error);
        }
    }

    function renderLogs(logs) {
        const container = document.getElementById('logs-container');
        
        if (logs.length === 0) {
            container.innerHTML = `
                <p class="text-gray-600 text-center py-8">
                    No logs yet. Waiting for first check...
                </p>
            `;
            return;
        }

        container.innerHTML = logs.map(log => `
            <div class="flex items-center justify-between border-b pb-2">
                <span>${new Date(log.timestamp).toLocaleString()}</span>
                <span class="${log.success ? 'text-green-600' : 'text-red-600'}">
                    ${log.statusCode} - ${log.responseTime}ms
                    ${log.error ? `<span class="text-xs text-gray-500 ml-2">(${log.error})</span>` : ''}
                </span>
            </div>
        `).join('');
    }

    // Fetch inicial
    fetchLogs();

    // Actualizar cada segundo
    setInterval(fetchLogs, 1000);
</script>